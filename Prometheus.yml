---

# - name: Install and Set Prometheus
#   hosts: localhost
#   gather_facts: no
#   tasks:
#     - add_host:
#         name: "{{ item }}"
#         group: prometheus_hosts
#       with_items:
#         - "{{ survey_hosts.split(",") }}"
#       when: survey_hosts is defined and item != ""

- name: 
  hosts: prometheus_hosts
  gather_facts: no
  vars:
    - prom_ver: 3.0.1
    - prom_url_sufix: /prom
    - nginx_add: |
        # Ansible Added Prometheus Location
                location {{ prom_url_sufix }} {             # http://{{inventory_hostname}}:443{{prom_url_sufix}}/graph
                    rewrite ^{{ prom_url_sufix }}(.*)$ $1 break;
                    proxy_pass http://{{inventory_hostname}}:9090;
                }

  tasks:
    - name: Create Directoey
      file:
        path: /etc/prometheus
        state: directory

    - name: Unarchive Prometheus
      unarchive:
        src: files/prometheus-{{ prom_ver }}.linux-amd64.tar.gz
        dest: /etc/prometheus

    - name: Copy Prometheus Service
      template:
        src: templates/prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service

    - name: Copy prometheus.yml and targets.json
      copy:
        src: files/{{ item }}
        dest: /etc/prometheus/prometheus-{{ prom_ver }}.limux-amd64
      with_items:
        - prometheus.yml
        - targets.json
        
     - name: Start and enable Prometheus
      systemd:
        name: prometheus
        daemon_reload: yes
        enabled: yes
        state: started

    - name: setting nginx
      include_role:
        name: set_nginx

    - name: Check If Prometheus in Nginx
      shell: grep ' {{ prom_url_sufix }} {' /etc/nginx/nginx.conf
      register: prom_in_nginx
      failed_when: prom_in_nginx.rc == 2000

    - name: Add Prometheus to Nginx
      blockinfile:
        path: /etc/nginx/nginx.conf
        marker: " "
        inserafter: '^        include \/etc\/nginx\/default\.d\/\*\.conf\;$'
        block: "{{ nginx_add }}"
        state: present
      register: add_nginx
      when: prom_in_nginx.rc == 1

    - name: reload nginx
      include_role:
        name: reload_nginx
        

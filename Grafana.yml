---

# - name: Install and Set Prometheus
#   hosts: localhost
#   gather_facts: no
#   tasks:
#     - add_host:
#         name: "{{ item }}"
#         group: prometheus_hosts
#       with_items:
#         - "{{ survey_hosts.split(",") }}"
#       when: survey_hosts is defined and item != ""

- name: 
  hosts: prometheus_hosts
  gather_facts: no
  vars:
    - grafana_ver: 11.3.2
    - grafana_url_sufix: /grafana
    - nginx_add: |
        # Ansible Added Prometheus Location
                location {{ grafana_url_sufix }} {             # http://{{inventory_hostname}}:443{{grafana_url_sufix}}/login
                    rewrite ^{{ grafana_url_sufix }}(.*)$ $1 break;
                    proxy_pass http://{{inventory_hostname}}:3000;
                    proxy redirect off;
                    proxy_set_header Host $http_host;
                }

  tasks:
    - name: Copy Grafana
      copy:
        src: files/grafana-enterprise-{{ grafana_ver }}-1.x86_64.rpm
        dest: /etc/

    - name: Install Grafana
      dnf:
        name: /etc/grafana-enterprise-{{ grafana_ver }}-1.x86_64.rpm
        state: present

     - name: Copy Plugins 
      copy:
        src: files/{{ item }}
        dest: /var/lib/grafana/plugins/
      with_items:
        - camptocamp-prometheus-alertmanager-datasource

    - name: Change Grafana URL
      lineinfile: 
        path: /etc/grafana/grafana.ini
        regexp: \;root_url = \%\(protocol\)s\:\/\/\%\(domain\)s\:\%\(http_port\)s\/
        line: root_url=%(protocol)s://%(domain)s:%(http_port)s{{ grafana_url_sufix }}
        state: present
      when: grafana_url_sufix is defined and grafana_url_sufix != "" and grafana_url_sufix != "/"
        
     - name: Start and enable Grafana
      systemd:
        name: grafana-server
        daemon_reload: yes
        enabled: yes
        state: started

    - name: Remove Grafana RPM
      file:
        path: /etc/grafana-enterprise-{{ grafana_ver }}-1.x86_64.rpm
        state: absent

    - name: setting nginx
      include_role:
        name: set_nginx

    - name: Check If Grafana in Nginx
      shell: grep ' {{ grafana_url_sufix }} {' /etc/nginx/nginx.conf
      register: grafana_in_nginx
      failed_when: grafana_in_nginx.rc == 2000

    - name: Add Grafana to Nginx
      blockinfile:
        path: /etc/nginx/nginx.conf
        marker: " "
        inserafter: '^        include \/etc\/nginx\/default\.d\/\*\.conf\;$'
        block: "{{ nginx_add }}"
        state: present
      register: add_nginx
      when: grafana_in_nginx.rc == 1

    - name: reload nginx
      include_role:
        name: reload_nginx
